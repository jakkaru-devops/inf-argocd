pgdumper:
  name: pg-dumper
  image: cr.yandex/crpn9ikb6hp5v19o9957/pgdumper
  version: 60
  envs:
    - PG_HOST
    - PG_PASSWORD
    - PG_USER
    - PG_DATABASE
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_BUCKET_NAME
    - AWS_HOST
    - AWS_PORT


pgrestore:
  name: pg-restore
  image: cr.yandex/crpn9ikb6hp5v19o9957/pgrestore
  version: 15
  envs:
    - PG_HOST
    - PG_PASSWORD
    - PG_USER
    - PG_DATABASE
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_BUCKET_NAME
    - AWS_HOST
    - AWS_PORT



app:
  name: inf-app
  image: cr.yandex/crpn9ikb6hp5v19o9957/inf-frontend-dev
  version: ffcc4e
  components: frontend
  port: 3000
  replicas: 1
  requests:
    cpu: "250m"
    memory: "250Mi"
  limits:
    cpu: "250m"
    memory: "250Mi"
  envs:
    - EXTERNAL_CATALOG_SERVER_URL
    - API_SERVER_URL


api:
  name: inf-api
  image: cr.yandex/crpn9ikb6hp5v19o9957/inf-backend-dev
  version: 378949
  components: backend
  port: 2348
  replicas: 1
  requests:
    cpu: "500m"
    memory: "350Mi"
  limits:
    cpu: "500m"
    memory: "350Mi"
  envs:
    - CLIENT_URL
    - DB_PORT
    - DB_HOST
    - REDIS_URL

postgres:
  name: postgres
  image: postgres
  version: 14
  replicas: 1
  components: postgres
  port: 5432
  requests:
    cpu: "1000m"
    memory: "2000Mi"
  limits:
    cpu: "1000m"
    memory: "2000Mi"
  envs:
    - POSTGRES_DB
    - POSTGRES_USER
    - POSTGRES_PASSWORD

redis:
  name: redis
  image: redis
  version: 7.0.7
  replicas: 1
  components: redis
  port: 6379
  requests:
    cpu: "200m"
    memory: "250Mi"
  limits:
    cpu: "200m"
    memory: "250Mi"

database:
  db: inf
  user: postgres
  password: postgres

vault:
  secret_id_postgres: "a70bd781-5be0-4637-a533-9d15945f4500"
  secret_id_api: "2c072098-687a-a053-162f-f8dec1e7e023"
  secret_id_app: "d51376af-62eb-b25b-f9ff-4034b28d2897"
  secret_id_s3: "5cecf212-5e9b-fd79-5ccd-310d9a5c181e"
  all_role_id: "7b6c2012-8089-2bf7-5775-36ab0fdde4ef"
  server_ip: "http://10.96.253.107:8200"

