pgdumper:
  name: pg-dumper
  image: cr.yandex/crp86m314psunr7fn694/pgbackup
  version: 1
  envs:
    - PG_HOST
    - PG_PASSWORD
    - PG_USER
    - PG_DATABASE
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_BUCKET_NAME
    - AWS_HOST
    - AWS_PORT


pgrestore:
  name: pg-restore
  image: cr.yandex/crp86m314psunr7fn694/pgrestore
  version: 1
  envs:
    - PG_HOST
    - PG_PASSWORD
    - PG_USER
    - PG_DATABASE
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_BUCKET_NAME
    - AWS_HOST
    - AWS_PORT



app:
  name: inf-app
  image: cr.yandex/crp86m314psunr7fn694/inf-frontend-dev
  version: e53ac8
  components: frontend
  port: 3000
  replicas: 1
  requests:
    cpu: "1000m"
    memory: "1000Mi"
  limits:
    cpu: "1000m"
    memory: "1000Mi"
  envs:
    - EXTERNAL_CATALOG_SERVER_URL
    - API_SERVER_URL


api:
  name: inf-api
  image: cr.yandex/crp86m314psunr7fn694/inf-backend-dev
  version: 0d7aa5
  components: backend
  port: 2348
  replicas: 1
  requests:
    cpu: "1500m"
    memory: "2500Mi"
  limits:
    cpu: "1500m"
    memory: "2500Mi"
  envs:
    - CLIENT_URL
    - DB_PORT
    - DB_HOST
    - REDIS_URL

postgres:
  name: postgres
  image: postgres
  version: 14
  replicas: 1
  components: postgres
  port: 5432
  requests:
    cpu: "2000m"
    memory: "6000Mi"
  limits:
    cpu: "2000m"
    memory: "6000Mi"
  envs:
    - POSTGRES_DB
    - POSTGRES_USER
    - POSTGRES_PASSWORD

redis:
  name: redis
  image: redis
  version: 7.0.7
  replicas: 1
  components: redis
  port: 6379
  requests:
    cpu: "500m"
    memory: "750Mi"
  limits:
    cpu: "500m"
    memory: "750Mi"

database:
  db: inf
  user: postgres
  password: postgres